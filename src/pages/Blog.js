import React, { useState, useContext } from 'react';
import { Link } from 'react-router-dom';
import { ThemeContext } from '../context/ThemeContext';

const Blog = () => {
  const { theme } = useContext(ThemeContext);
  const [searchTerm, setSearchTerm] = useState('');
  const [selectedCategory, setSelectedCategory] = useState('all');

  // Function to get theme colors
  const getThemeColors = () => {
    const colors = {
      'pink': {
        accent: 'text-pink-600',
        bgAccent: 'bg-pink-600',
        bgHover: 'hover:bg-pink-700',
        bgLight: 'bg-pink-50',
        bgLightHover: 'hover:bg-pink-100',
        border: 'border-pink-500',
        borderHover: 'hover:border-pink-600',
        gradient: 'from-pink-400 to-pink-600',
        gradientHover: 'from-pink-500 to-pink-700'
      },
      'blue': {
        accent: 'text-blue-600',
        bgAccent: 'bg-blue-600',
        bgHover: 'hover:bg-blue-700',
        bgLight: 'bg-blue-50',
        bgLightHover: 'hover:bg-blue-100',
        border: 'border-blue-500',
        borderHover: 'hover:border-blue-600',
        gradient: 'from-blue-400 to-blue-600',
        gradientHover: 'from-blue-500 to-blue-700'
      },
      'purple': {
        accent: 'text-purple-600',
        bgAccent: 'bg-purple-600',
        bgHover: 'hover:bg-purple-700',
        bgLight: 'bg-purple-50',
        bgLightHover: 'hover:bg-purple-100',
        border: 'border-purple-500',
        borderHover: 'hover:border-purple-600',
        gradient: 'from-purple-400 to-purple-600',
        gradientHover: 'from-purple-500 to-purple-700'
      },
      'green': {
        accent: 'text-emerald-600',
        bgAccent: 'bg-emerald-600',
        bgHover: 'hover:bg-emerald-700',
        bgLight: 'bg-emerald-50',
        bgLightHover: 'hover:bg-emerald-100',
        border: 'border-emerald-500',
        borderHover: 'hover:border-emerald-600',
        gradient: 'from-emerald-400 to-emerald-600',
        gradientHover: 'from-emerald-500 to-emerald-700'
      },
      'orange': {
        accent: 'text-orange-600',
        bgAccent: 'bg-orange-600',
        bgHover: 'hover:bg-orange-700',
        bgLight: 'bg-orange-50',
        bgLightHover: 'hover:bg-orange-100',
        border: 'border-orange-500',
        borderHover: 'hover:border-orange-600',
        gradient: 'from-orange-400 to-orange-600',
        gradientHover: 'from-orange-500 to-orange-700'
      }
    };
    return colors[theme] || colors['pink'];
  };

  const themeColors = getThemeColors();

  const categories = [
    { id: 'all', name: 'T·∫•t c·∫£', icon: 'üìö' },
    { id: 'skincare', name: 'ChƒÉm s√≥c da', icon: 'üå∏' },
    { id: 'massage', name: 'Massage', icon: 'üíÜ‚Äç‚ôÄÔ∏è' },
    { id: 'wellness', name: 'S·ª©c kh·ªèe', icon: 'üßò‚Äç‚ôÄÔ∏è' },
    { id: 'tips', name: 'M·∫πo hay', icon: 'üí°' }
  ];

  const blogPosts = [
    {
      id: 1,
      title: '10 B√≠ Quy·∫øt ChƒÉm S√≥c Da M√πa H√® Hi·ªáu Qu·∫£',
      category: 'skincare',
      excerpt: 'M√πa h√® v·ªõi nhi·ªát ƒë·ªô cao v√† √°nh n·∫Øng gay g·∫Øt c√≥ th·ªÉ g√¢y h·∫°i cho l√†n da. H√£y kh√°m ph√° nh·ªØng b√≠ quy·∫øt chƒÉm s√≥c da hi·ªáu qu·∫£ trong m√πa h√®.',
      image: 'https://images.unsplash.com/photo-1556228720-195a672e8a03?auto=format&fit=crop&w=600&q=80',
      author: 'Nguy·ªÖn Th·ªã Mai',
      authorImage: 'https://images.unsplash.com/photo-1494790108755-2616b612b786?auto=format&fit=crop&w=100&q=80',
      date: '15/12/2023',
      readTime: '5 ph√∫t',
      tags: ['ChƒÉm s√≥c da', 'M√πa h√®', 'Kem ch·ªëng n·∫Øng'],
      featured: true
    },
    {
      id: 2,
      title: 'L·ª£i √çch C·ªßa Massage ƒê√° N√≥ng Cho S·ª©c Kh·ªèe',
      category: 'massage',
      excerpt: 'Massage ƒë√° n√≥ng kh√¥ng ch·ªâ gi√∫p th∆∞ gi√£n m√† c√≤n mang l·∫°i nhi·ªÅu l·ª£i √≠ch s·ª©c kh·ªèe ƒë√°ng k·ªÉ. T√¨m hi·ªÉu chi ti·∫øt v·ªÅ ph∆∞∆°ng ph√°p n√†y.',
      image: 'https://images.unsplash.com/photo-1544161512-6ad1f9baa7b8?auto=format&fit=crop&w=600&q=80',
      author: 'Tr·∫ßn VƒÉn H√πng',
      authorImage: 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?auto=format&fit=crop&w=100&q=80',
      date: '12/12/2023',
      readTime: '7 ph√∫t',
      tags: ['Massage', 'ƒê√° n√≥ng', 'S·ª©c kh·ªèe'],
      featured: false
    },
    {
      id: 3,
      title: 'Thi·ªÅn ƒê·ªãnh: Ph∆∞∆°ng Ph√°p Gi·∫£m Stress Hi·ªáu Qu·∫£',
      category: 'wellness',
      excerpt: 'Thi·ªÅn ƒë·ªãnh l√† m·ªôt trong nh·ªØng ph∆∞∆°ng ph√°p gi·∫£m stress hi·ªáu qu·∫£ nh·∫•t. H·ªçc c√°ch thi·ªÅn ƒë·ªãnh ƒë√∫ng c√°ch ƒë·ªÉ c·∫£i thi·ªán s·ª©c kh·ªèe tinh th·∫ßn.',
      image: 'https://images.unsplash.com/photo-1506905925346-21bda4d32df4?auto=format&fit=crop&w=600&q=80',
      author: 'L√™ Th·ªã Lan',
      authorImage: 'https://images.unsplash.com/photo-1438761681033-6461ffad8d80?auto=format&fit=crop&w=100&q=80',
      date: '10/12/2023',
      readTime: '6 ph√∫t',
      tags: ['Thi·ªÅn ƒë·ªãnh', 'Gi·∫£m stress', 'S·ª©c kh·ªèe tinh th·∫ßn'],
      featured: true
    },
    {
      id: 4,
      title: 'C√°ch Ch·ªçn S·∫£n Ph·∫©m ChƒÉm S√≥c Da Ph√π H·ª£p',
      category: 'skincare',
      excerpt: 'Vi·ªác ch·ªçn ƒë√∫ng s·∫£n ph·∫©m chƒÉm s√≥c da l√† r·∫•t quan tr·ªçng. H∆∞·ªõng d·∫´n chi ti·∫øt c√°ch ch·ªçn s·∫£n ph·∫©m ph√π h·ª£p v·ªõi t·ª´ng lo·∫°i da.',
      image: 'https://images.unsplash.com/photo-1570172619644-dfd03ed5d881?auto=format&fit=crop&w=600&q=80',
      author: 'Nguy·ªÖn Th·ªã Mai',
      authorImage: 'https://images.unsplash.com/photo-1494790108755-2616b612b786?auto=format&fit=crop&w=100&q=80',
      date: '08/12/2023',
      readTime: '8 ph√∫t',
      tags: ['ChƒÉm s√≥c da', 'S·∫£n ph·∫©m', 'Lo·∫°i da'],
      featured: false
    },
    {
      id: 5,
      title: 'Yoga Tr·ªã Li·ªáu: C·∫£i Thi·ªán S·ª©c Kh·ªèe To√†n Di·ªán',
      category: 'wellness',
      excerpt: 'Yoga tr·ªã li·ªáu kh√¥ng ch·ªâ gi√∫p c·∫£i thi·ªán s·ª©c kh·ªèe th·ªÉ ch·∫•t m√† c√≤n mang l·∫°i l·ª£i √≠ch cho tinh th·∫ßn. Kh√°m ph√° c√°c b√†i t·∫≠p yoga hi·ªáu qu·∫£.',
      image: 'https://images.unsplash.com/photo-1544367567-0f2fcb009e0b?auto=format&fit=crop&w=600&q=80',
      author: 'L√™ Th·ªã Lan',
      authorImage: 'https://images.unsplash.com/photo-1438761681033-6461ffad8d80?auto=format&fit=crop&w=100&q=80',
      date: '05/12/2023',
      readTime: '9 ph√∫t',
      tags: ['Yoga', 'Tr·ªã li·ªáu', 'S·ª©c kh·ªèe'],
      featured: false
    },
    {
      id: 6,
      title: 'M·∫πo Th∆∞ Gi√£n Sau Ng√†y L√†m Vi·ªác CƒÉng Th·∫≥ng',
      category: 'tips',
      excerpt: 'Sau m·ªôt ng√†y l√†m vi·ªác cƒÉng th·∫≥ng, b·∫°n c·∫ßn nh·ªØng ph∆∞∆°ng ph√°p th∆∞ gi√£n hi·ªáu qu·∫£. Kh√°m ph√° c√°c m·∫πo th∆∞ gi√£n ƒë∆°n gi·∫£n m√† hi·ªáu qu·∫£.',
      image: 'https://images.unsplash.com/photo-1517841905240-472988babdf9?auto=format&fit=crop&w=600&q=80',
      author: 'Tr·∫ßn VƒÉn H√πng',
      authorImage: 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?auto=format&fit=crop&w=100&q=80',
      date: '03/12/2023',
      readTime: '4 ph√∫t',
      tags: ['Th∆∞ gi√£n', 'Gi·∫£m stress', 'Cu·ªôc s·ªëng'],
      featured: false
    }
  ];

  const filteredPosts = blogPosts.filter(post => {
    const matchesSearch = post.title.toLowerCase().includes(searchTerm.toLowerCase()) ||
                         post.excerpt.toLowerCase().includes(searchTerm.toLowerCase());
    const matchesCategory = selectedCategory === 'all' || post.category === selectedCategory;
    return matchesSearch && matchesCategory;
  });

  const featuredPosts = blogPosts.filter(post => post.featured);

  return (
    <div className="min-h-screen bg-gradient-to-br from-gray-50 to-white">
      {/* Hero Section */}
      <section className={`py-20 lg:py-32 bg-gradient-to-br ${themeColors.gradient} relative overflow-hidden`}>
        <div className="absolute inset-0 bg-black/20"></div>
        <div className="container-custom relative z-10">
          <div className="text-center max-w-4xl mx-auto">
            <div className="inline-flex items-center px-4 py-2 bg-white/20 backdrop-blur-sm rounded-full text-white text-sm font-medium mb-6">
              <span className="mr-2">üìñ</span>
              Blog & Tin t·ª©c
            </div>
            
            <h1 className="text-5xl lg:text-7xl font-serif font-bold text-white mb-8 leading-tight">
              Kh√°m ph√°{' '}
              <span className="bg-white/20 backdrop-blur-sm bg-clip-text text-transparent">
                ki·∫øn th·ª©c
              </span>
            </h1>
            
            <p className="text-xl lg:text-2xl text-white/90 mb-12 leading-relaxed max-w-3xl mx-auto">
              Nh·ªØng b√†i vi·∫øt h·ªØu √≠ch v·ªÅ chƒÉm s√≥c s·ª©c kh·ªèe, l√†m ƒë·∫πp v√† th∆∞ gi√£n t·ª´ c√°c chuy√™n gia h√†ng ƒë·∫ßu
            </p>
            
            {/* Search Bar */}
            <div className="max-w-2xl mx-auto">
              <div className="relative">
                <input
                  type="text"
                  placeholder="T√¨m ki·∫øm b√†i vi·∫øt..."
                  value={searchTerm}
                  onChange={(e) => setSearchTerm(e.target.value)}
                  className="w-full px-8 py-5 pl-16 rounded-2xl border-0 bg-white/20 backdrop-blur-sm text-white placeholder-white/70 focus:outline-none focus:ring-2 focus:ring-white/50 text-lg shadow-2xl"
                />
                <svg className="absolute left-6 top-1/2 transform -translate-y-1/2 w-6 h-6 text-white/70" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                </svg>
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* Category Filter */}
      <section className="py-16 bg-white border-b border-gray-100 sticky top-0 z-10 backdrop-blur-sm bg-white/95">
        <div className="container-custom">
          <div className="flex flex-wrap justify-center gap-4">
            {categories.map((category) => (
              <button
                key={category.id}
                onClick={() => setSelectedCategory(category.id)}
                className={`px-6 py-3 rounded-2xl font-medium transition-all duration-300 flex items-center gap-2 ${
                  selectedCategory === category.id
                    ? `bg-gradient-to-r ${themeColors.gradient} text-white shadow-lg transform scale-105`
                    : 'bg-gray-100 text-gray-700 hover:bg-gray-200 hover:scale-105'
                }`}
              >
                <span className="text-lg">{category.icon}</span>
                {category.name}
              </button>
            ))}
          </div>
        </div>
      </section>

      {/* Featured Posts */}
      {selectedCategory === 'all' && (
        <section className="py-20 bg-gradient-to-br from-gray-50 to-white">
          <div className="container-custom">
            <div className="text-center mb-16">
              <h2 className="text-4xl lg:text-5xl font-serif font-bold text-gray-900 mb-6">
                B√†i vi·∫øt n·ªïi b·∫≠t
              </h2>
              <p className="text-xl text-gray-600 max-w-3xl mx-auto">
                Nh·ªØng b√†i vi·∫øt ƒë∆∞·ª£c y√™u th√≠ch nh·∫•t t·ª´ c·ªông ƒë·ªìng
              </p>
            </div>
            
            <div className="grid lg:grid-cols-2 gap-12">
              {featuredPosts.map((post, index) => (
                <article key={post.id} className="group bg-white rounded-3xl shadow-xl hover:shadow-2xl overflow-hidden transition-all duration-500 transform hover:-translate-y-2 animate-fade-in" style={{animationDelay: `${index * 0.2}s`}}>
                  <div className="relative overflow-hidden">
                    <img 
                      src={post.image}
                      alt={post.title}
                      className="w-full h-80 object-cover group-hover:scale-110 transition-transform duration-700"
                    />
                    <div className="absolute inset-0 bg-gradient-to-t from-black/50 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300" />
                    <div className="absolute top-6 left-6">
                      <span className={`bg-gradient-to-r ${themeColors.gradient} text-white px-4 py-2 rounded-full text-sm font-bold shadow-lg`}>
                        {categories.find(cat => cat.id === post.category)?.name}
                      </span>
                    </div>
                    <div className="absolute top-6 right-6">
                      <span className="bg-white/90 backdrop-blur-sm text-gray-800 px-3 py-1 rounded-full text-sm font-medium">
                        ‚≠ê N·ªïi b·∫≠t
                      </span>
                    </div>
                  </div>
                  
                  <div className="p-8">
                    <div className="flex items-center mb-6">
                      <img 
                        src={post.authorImage} 
                        alt={post.author}
                        className="w-12 h-12 rounded-full object-cover mr-4"
                      />
                      <div>
                        <div className="font-semibold text-gray-800">{post.author}</div>
                        <div className="text-sm text-gray-500">{post.date} ‚Ä¢ {post.readTime}</div>
                      </div>
                    </div>
                    
                    <h2 className="text-2xl lg:text-3xl font-bold text-gray-800 mb-4 leading-tight">
                      {post.title}
                    </h2>
                    
                    <p className="text-gray-600 mb-6 leading-relaxed text-lg">
                      {post.excerpt}
                    </p>
                    
                    <div className="flex flex-wrap gap-2 mb-6">
                      {post.tags.map((tag, index) => (
                        <span key={index} className="bg-gray-100 text-gray-700 px-3 py-1 rounded-full text-sm font-medium">
                          #{tag}
                        </span>
                      ))}
                    </div>
                    
                    <Link 
                      to={`/blog/${post.id}`}
                      className={`inline-flex items-center bg-gradient-to-r ${themeColors.gradient} text-white font-bold px-6 py-3 rounded-2xl transition-all duration-300 hover:scale-105 shadow-lg`}
                    >
                      ƒê·ªçc th√™m
                      <svg className="w-5 h-5 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5l7 7-7 7" />
                      </svg>
                    </Link>
                  </div>
                </article>
              ))}
            </div>
          </div>
        </section>
      )}

      {/* Blog Posts Grid */}
      <section className="py-20 bg-white">
        <div className="container-custom">
          <div className="text-center mb-16">
            <h2 className="text-4xl lg:text-5xl font-serif font-bold text-gray-900 mb-6">
              {selectedCategory === 'all' ? 'T·∫•t c·∫£ b√†i vi·∫øt' : `${categories.find(cat => cat.id === selectedCategory)?.name}`}
            </h2>
            <p className="text-xl text-gray-600">
              {filteredPosts.length} b√†i vi·∫øt ƒë∆∞·ª£c t√¨m th·∫•y
            </p>
          </div>
          
          {filteredPosts.length > 0 ? (
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
              {filteredPosts.map((post, index) => (
                <article key={post.id} className="group bg-white rounded-3xl shadow-lg hover:shadow-2xl overflow-hidden transition-all duration-500 transform hover:-translate-y-2 animate-fade-in" style={{animationDelay: `${index * 0.1}s`}}>
                  <div className="relative overflow-hidden">
                    <img 
                      src={post.image}
                      alt={post.title}
                      className="w-full h-64 object-cover group-hover:scale-110 transition-transform duration-700"
                    />
                    <div className="absolute inset-0 bg-gradient-to-t from-black/30 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300" />
                    <div className="absolute top-4 left-4">
                      <span className={`bg-gradient-to-r ${themeColors.gradient} text-white px-3 py-1 rounded-full text-sm font-bold shadow-lg`}>
                        {categories.find(cat => cat.id === post.category)?.name}
                      </span>
                    </div>
                  </div>
                  
                  <div className="p-6">
                    <div className="flex items-center text-sm text-gray-500 mb-4">
                      <img 
                        src={post.authorImage} 
                        alt={post.author}
                        className="w-8 h-8 rounded-full object-cover mr-3"
                      />
                      <span>{post.author}</span>
                      <span className="mx-2">‚Ä¢</span>
                      <span>{post.date}</span>
                      <span className="mx-2">‚Ä¢</span>
                      <span>{post.readTime}</span>
                    </div>
                    
                    <h2 className="text-xl font-bold text-gray-800 mb-4 leading-tight line-clamp-2">
                      {post.title}
                    </h2>
                    
                    <p className="text-gray-600 mb-6 leading-relaxed line-clamp-3">
                      {post.excerpt}
                    </p>
                    
                    <div className="flex flex-wrap gap-2 mb-6">
                      {post.tags.slice(0, 2).map((tag, index) => (
                        <span key={index} className="bg-gray-100 text-gray-700 px-2 py-1 rounded-full text-xs font-medium">
                          #{tag}
                        </span>
                      ))}
                    </div>
                    
                    <Link 
                      to={`/blog/${post.id}`}
                      className={`inline-flex items-center ${themeColors.accent} font-semibold transition-all duration-300 hover:scale-105`}
                    >
                      ƒê·ªçc th√™m
                      <svg className="w-4 h-4 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5l7 7-7 7" />
                      </svg>
                    </Link>
                  </div>
                </article>
              ))}
            </div>
          ) : (
            <div className="text-center py-20">
              <div className="text-6xl mb-6">üîç</div>
              <h3 className="text-3xl font-bold text-gray-800 mb-4">Kh√¥ng t√¨m th·∫•y b√†i vi·∫øt</h3>
              <p className="text-xl text-gray-600 mb-8">H√£y th·ª≠ t√¨m ki·∫øm v·ªõi t·ª´ kh√≥a kh√°c ho·∫∑c ch·ªçn danh m·ª•c kh√°c.</p>
              <button 
                onClick={() => {
                  setSearchTerm('');
                  setSelectedCategory('all');
                }}
                className={`bg-gradient-to-r ${themeColors.gradient} text-white font-bold px-8 py-4 rounded-2xl transition-all duration-300 hover:scale-105 shadow-lg`}
              >
                Xem t·∫•t c·∫£ b√†i vi·∫øt
              </button>
            </div>
          )}
        </div>
      </section>

      {/* Newsletter Section */}
      <section className={`py-20 lg:py-32 bg-gradient-to-r ${themeColors.gradient} relative overflow-hidden`}>
        <div className="absolute inset-0 bg-black/20"></div>
        <div className="container-custom relative z-10 text-center">
          <h2 className="text-4xl lg:text-5xl font-serif font-bold text-white mb-6">
            ƒêƒÉng k√Ω nh·∫≠n tin
          </h2>
          <p className="text-xl text-white/90 mb-12 max-w-2xl mx-auto leading-relaxed">
            Nh·∫≠n nh·ªØng b√†i vi·∫øt m·ªõi nh·∫•t v·ªÅ chƒÉm s√≥c s·ª©c kh·ªèe v√† l√†m ƒë·∫πp tr·ª±c ti·∫øp v√†o email c·ªßa b·∫°n
          </p>
          <div className="max-w-md mx-auto flex bg-white/20 backdrop-blur-sm rounded-2xl p-2">
            <input
              type="email"
              placeholder="Nh·∫≠p email c·ªßa b·∫°n..."
              className="flex-1 px-6 py-4 rounded-xl border-0 bg-white/90 focus:ring-2 focus:ring-white focus:outline-none text-lg"
            />
            <button className={`bg-white ${themeColors.accent} hover:bg-gray-100 font-bold px-8 py-4 rounded-xl transition-all duration-300 hover:scale-105 text-lg shadow-lg`}>
              ƒêƒÉng k√Ω
            </button>
          </div>
        </div>
      </section>

      {/* CTA Section */}
      <section className="py-20 lg:py-32 bg-white">
        <div className="container-custom text-center">
          <h2 className="text-4xl lg:text-5xl font-serif font-bold text-gray-900 mb-6">
            S·∫µn s√†ng tr·∫£i nghi·ªám?
          </h2>
          <p className="text-xl text-gray-600 mb-12 max-w-2xl mx-auto leading-relaxed">
            ƒê·∫∑t l·ªãch ngay h√¥m nay ƒë·ªÉ t·∫≠n h∆∞·ªüng d·ªãch v·ª• spa ch·∫•t l∆∞·ª£ng cao t·∫°i Zuna Spa
          </p>
          <div className="flex flex-col sm:flex-row gap-6 justify-center">
            <Link 
              to="/booking" 
              className={`bg-gradient-to-r ${themeColors.gradient} text-white font-bold px-12 py-5 rounded-2xl transition-all duration-300 transform hover:scale-105 shadow-2xl text-lg`}
            >
              ƒê·∫∑t l·ªãch ngay
            </Link>
            <Link 
              to="/services" 
              className="bg-white text-gray-800 border-2 border-gray-200 font-bold px-12 py-5 rounded-2xl transition-all duration-300 hover:bg-gray-50 hover:scale-105 shadow-2xl text-lg"
            >
              Xem d·ªãch v·ª•
            </Link>
          </div>
        </div>
      </section>
    </div>
  );
};

export default Blog; 